# Generated by Django 4.1.4 on 2022-12-09 08:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Data aktualizacji')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Data utworzenia')),
                ('number', models.CharField(max_length=25, unique=True, verbose_name='Numer')),
            ],
            options={
                'verbose_name': 'Certyfikat',
                'verbose_name_plural': 'Certyfikaty',
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Data aktualizacji')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Data utworzenia')),
                ('tax_id', models.CharField(max_length=15, unique=True, verbose_name='NIP')),
                ('name', models.CharField(max_length=50, verbose_name='Nazwa firmy')),
                ('users', models.ManyToManyField(related_name='company_users_rel', to=settings.AUTH_USER_MODEL, verbose_name='Użytkownicy')),
            ],
            options={
                'verbose_name': 'Firma',
                'verbose_name_plural': 'Firmy',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Dimension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Data aktualizacji')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Data utworzenia')),
                ('size', models.DecimalField(decimal_places=2, error_messages={'required': 'Wartość w polu średnicy jest wymagana.', 'unique': 'Taka średnica już istnieje w bazie danych.'}, max_digits=6, unique=True, verbose_name='Średnica')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse_app.company')),
            ],
            options={
                'verbose_name': 'Średnica',
                'verbose_name_plural': 'Średnice',
                'ordering': ['size'],
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Data aktualizacji')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Data utworzenia')),
                ('name', models.CharField(error_messages={'required': 'Wartość w polu gatunku jest wymagana.', 'unique': 'Taki gatunek już istnieje w bazie danych.'}, max_length=25, unique=True, verbose_name='Oznaczenie')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse_app.company')),
            ],
            options={
                'verbose_name': 'Gatunek',
                'verbose_name_plural': 'Gatunki',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Heat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Data aktualizacji')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Data utworzenia')),
                ('name', models.CharField(max_length=25, unique=True, verbose_name='Oznaczenie')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse_app.company')),
            ],
            options={
                'verbose_name': 'Wytop',
                'verbose_name_plural': 'Wytopy',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Data aktualizacji')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Data utworzenia')),
                ('number', models.CharField(max_length=25, unique=True, verbose_name='Dokument')),
                ('date', models.DateField(verbose_name='Data')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse_app.company')),
            ],
            options={
                'verbose_name': 'Rozchód',
                'verbose_name_plural': 'Rozchody',
                'ordering': ['number'],
                'get_latest_by': 'date',
            },
        ),
        migrations.CreateModel(
            name='Supply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Data aktualizacji')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Data utworzenia')),
                ('number', models.CharField(max_length=25, unique=True, verbose_name='Dokument')),
                ('date', models.DateField(verbose_name='Data')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse_app.company')),
            ],
            options={
                'verbose_name': 'Przychód',
                'verbose_name_plural': 'Przychody',
                'ordering': ['number'],
                'get_latest_by': 'date',
            },
        ),
        migrations.CreateModel(
            name='SupplyItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Data aktualizacji')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Data utworzenia')),
                ('quantity', models.DecimalField(decimal_places=2, default=0, max_digits=6, verbose_name='Ilość')),
                ('actual', models.DecimalField(decimal_places=2, default=0, max_digits=6, verbose_name='Stan')),
                ('certificate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplyitem', to='warehouse_app.certificate', verbose_name='Certyfikat')),
                ('dimension', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplyitem', to='warehouse_app.dimension', verbose_name='Średnica')),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplyitem', to='warehouse_app.grade', verbose_name='Gatunek')),
                ('heat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplyitem', to='warehouse_app.heat', verbose_name='Wytop')),
                ('supply', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplyitem', to='warehouse_app.supply', verbose_name='Przychód')),
            ],
            options={
                'verbose_name': 'Pozycja przychodu',
                'verbose_name_plural': 'Pozycje przychodu',
            },
        ),
        migrations.CreateModel(
            name='IssueItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Data aktualizacji')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Data utworzenia')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Ilość')),
                ('certificate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issueitem', to='warehouse_app.certificate', verbose_name='Certyfikat')),
                ('dimension', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issueitem', to='warehouse_app.dimension', verbose_name='Średnica')),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issueitem', to='warehouse_app.grade', verbose_name='Gatunek')),
                ('heat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issueitem', to='warehouse_app.heat', verbose_name='Wytop')),
                ('issue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issueitem', to='warehouse_app.issue', verbose_name='Rozchód')),
                ('supply_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issueitem', to='warehouse_app.supplyitem', verbose_name='Dostawa')),
            ],
            options={
                'verbose_name': 'Pozycja rozchodu',
                'verbose_name_plural': 'Pozycje rozchodu',
            },
        ),
        migrations.AddField(
            model_name='certificate',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse_app.company'),
        ),
        migrations.AddIndex(
            model_name='supplyitem',
            index=models.Index(fields=['dimension', 'grade'], name='supplyitem_dimension_grade_idx'),
        ),
        migrations.AddIndex(
            model_name='supply',
            index=models.Index(fields=['number'], name='supply_number_idx'),
        ),
        migrations.AddIndex(
            model_name='supply',
            index=models.Index(fields=['date'], name='supply_date_idx'),
        ),
        migrations.AddIndex(
            model_name='issueitem',
            index=models.Index(fields=['dimension', 'grade'], name='issueitem_dimension_grade_idx'),
        ),
        migrations.AddIndex(
            model_name='issue',
            index=models.Index(fields=['number'], name='issue_number_idx'),
        ),
        migrations.AddIndex(
            model_name='issue',
            index=models.Index(fields=['date'], name='issue_date_idx'),
        ),
        migrations.AddIndex(
            model_name='heat',
            index=models.Index(fields=['name'], name='heat_name_idx'),
        ),
        migrations.AddIndex(
            model_name='grade',
            index=models.Index(fields=['name'], name='grade_name_idx'),
        ),
        migrations.AddIndex(
            model_name='dimension',
            index=models.Index(fields=['size'], name='dimension_size_idx'),
        ),
        migrations.AddConstraint(
            model_name='dimension',
            constraint=models.CheckConstraint(check=models.Q(('size__gt', 0)), name='size_gt_0', violation_error_message='Średnica musi być większa od zera.'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['tax_id'], name='company_nip_idx'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['name'], name='company_name_idx'),
        ),
        migrations.AddIndex(
            model_name='certificate',
            index=models.Index(fields=['number'], name='certificate_number_idx'),
        ),
    ]
